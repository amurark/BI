[2017-01-24 23:09:34,396] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 23:19:34,410] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 23:23:46,390] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 23:23:46,393] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 23:23:46,393] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2017-01-24 23:23:46,423] INFO re-registering broker info in ZK for broker 0 (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-24 23:23:50,701] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 23:23:50,703] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 23:23:50,704] INFO Registered broker 0 at path /brokers/ids/0 with addresses: PLAINTEXT -> EndPoint(192.168.0.7,9092,PLAINTEXT) (kafka.utils.ZkUtils)
[2017-01-24 23:23:50,704] INFO done re-registering broker (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-24 23:23:50,704] INFO Subscribing to /brokers/topics path to watch for new topics (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-24 23:23:50,714] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions twitterstream-0 (kafka.server.ReplicaFetcherManager)
[2017-01-24 23:23:50,716] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2017-01-24 23:30:07,094] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 23:40:07,112] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 23:50:07,132] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
