[2017-01-24 22:11:35,062] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 22:11:35,067] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 22:11:35,067] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2017-01-24 22:11:35,092] INFO re-registering broker info in ZK for broker 0 (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-24 22:11:36,117] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 22:11:36,120] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-24 22:11:36,120] INFO Registered broker 0 at path /brokers/ids/0 with addresses: PLAINTEXT -> EndPoint(192.168.0.7,9092,PLAINTEXT) (kafka.utils.ZkUtils)
[2017-01-24 22:11:36,120] INFO done re-registering broker (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-24 22:11:36,120] INFO Subscribing to /brokers/topics path to watch for new topics (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-24 22:11:36,122] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2017-01-24 22:11:36,132] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions twitterstream-0 (kafka.server.ReplicaFetcherManager)
[2017-01-24 22:19:34,309] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 22:29:34,323] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 22:39:34,341] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 22:49:34,361] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-24 22:59:34,375] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
