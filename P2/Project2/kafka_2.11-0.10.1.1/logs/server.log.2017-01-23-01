[2017-01-23 01:00:14,100] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 01:12:20,874] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 01:12:20,875] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 01:12:20,875] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2017-01-23 01:12:20,893] INFO re-registering broker info in ZK for broker 0 (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-23 01:12:21,516] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 01:12:21,518] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 01:12:21,518] INFO Registered broker 0 at path /brokers/ids/0 with addresses: PLAINTEXT -> EndPoint(192.168.0.7,9092,PLAINTEXT) (kafka.utils.ZkUtils)
[2017-01-23 01:12:21,518] INFO done re-registering broker (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-23 01:12:21,518] INFO Subscribing to /brokers/topics path to watch for new topics (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-23 01:12:21,531] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions twitterstream-0 (kafka.server.ReplicaFetcherManager)
[2017-01-23 01:12:21,534] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2017-01-23 01:22:16,246] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 01:32:16,263] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 01:42:16,282] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 01:52:16,789] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
