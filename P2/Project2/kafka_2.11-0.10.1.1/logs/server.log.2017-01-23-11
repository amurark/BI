[2017-01-23 11:06:58,536] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 11:19:02,647] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 11:19:02,647] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 11:19:02,648] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2017-01-23 11:19:02,662] INFO re-registering broker info in ZK for broker 0 (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-23 11:19:03,522] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 11:19:03,525] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-01-23 11:19:03,525] INFO Registered broker 0 at path /brokers/ids/0 with addresses: PLAINTEXT -> EndPoint(192.168.0.7,9092,PLAINTEXT) (kafka.utils.ZkUtils)
[2017-01-23 11:19:03,525] INFO done re-registering broker (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-23 11:19:03,525] INFO Subscribing to /brokers/topics path to watch for new topics (kafka.server.KafkaHealthcheck$SessionExpireListener)
[2017-01-23 11:19:03,540] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions twitterstream-0 (kafka.server.ReplicaFetcherManager)
[2017-01-23 11:19:03,542] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2017-01-23 11:27:44,901] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 11:37:44,916] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 11:47:44,937] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-01-23 11:57:44,957] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
